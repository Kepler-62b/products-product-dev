<?php
/*
 *  Copyright 2022.  Baks.dev <admin@baks.dev>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

namespace BaksDev\Products\Product\DataFixtures\Security;

use App\Module\Users\Groups\Group\Entity\Group;
use App\Module\Users\Groups\Handler\Role\RoleHandler;
use App\Module\Users\Groups\Repository\Group\CheckRole\GetExistCheckRole\GetExistCheckRoleInterface;
use App\Module\Users\Groups\Repository\Role\GetExistRole\GetExistRoleInterface;
use App\Module\Users\Groups\Role\DataFixtures\Security\RoleFixturesDTO;
use App\Module\Users\Groups\Role\DataFixtures\Security\RoleTransFixturesDTO;
use App\Module\Users\Groups\Roles\Role\Type\Prefix\RolePrefix;
use BaksDev\Core\Type\Locale\Locale;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Persistence\ObjectManager;

final class RoleFixtures extends Fixture implements DependentFixtureInterface
{
    private const ROLE_NAME = [
      'ru' => 'Продукция',
      'en' => 'Product'
    ];
    
    private const ROLE_DESC = [
      'ru' => 'Продукция',
      'en' => 'Products'
    ];
    
    public const ROLE_PREFIX = 'ROLE_PRODUCT';
    
    private RoleHandler $roleHandler;
    private GetExistRoleInterface $existRole;
    private GetExistCheckRoleInterface $existCheckRole;
    
    public function __construct(
      RoleHandler $roleHandler,
      GetExistRoleInterface $existRole,
      GetExistCheckRoleInterface $existCheckRole
    )
    {
        $this->roleHandler = $roleHandler;
        $this->existRole = $existRole;
        $this->existCheckRole = $existCheckRole;
    }
    
    public function load(ObjectManager $manager)
    {
        # php bin/console doctrine:fixtures:load --append
        
        $ROLE_PREFIX = new RolePrefix(self::ROLE_PREFIX);
        
        $Role = new RoleFixturesDTO($ROLE_PREFIX);
        
        /* Добавляем к роли настройки локали */
        /** @var Locale $local */
        foreach(Locale::cases() as $local)
        {
            $TransRole = new RoleTransFixturesDTO
            (
              $local,
              self::ROLE_NAME[$local->getValue()],
              self::ROLE_DESC[$local->getValue()]
            );
            $Role->addTrans($TransRole);
        }
        
        /* Сохраняем роль */
        $this->roleHandler->handle($Role);
        
        
        /* Добавляем роль к группе администраторов */
        $GROUP_PREFIX = \App\Module\Users\Groups\Group\DataFixtures\Security\Group\GroupFixtures::GROUP_PREFIX;
        $Group = $manager->getRepository(Group::class)->find($GROUP_PREFIX);
        
        if($Group && !$this->existCheckRole->get($ROLE_PREFIX, $Group->getEvent()))
        {
            $GroupCheckRole = new Group\CheckRole($Group->getEvent(), $ROLE_PREFIX);
            $manager->persist($GroupCheckRole);
            $manager->flush();
        }
    }
    
    
    public function getDependencies() : array
    {
        return [
          \App\Module\Users\Groups\Role\DataFixtures\Security\RoleFixtures::class,
        ];
    }
    
}