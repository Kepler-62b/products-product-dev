<?php
/*
 *  Copyright 2022.  Baks.dev <admin@baks.dev>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

namespace BaksDev\Products\Product\DataFixtures\Security;

use BaksDev\Users\Groups\Group\DataFixtures\Security\Group\GroupFixtures;
use BaksDev\Users\Groups\Group\Entity\Group;
use BaksDev\Users\Groups\Handler\Voter\VoterHandler;
use BaksDev\Users\Groups\Repository\Group\CheckVoter\GetExistCheckVoter\GetExistCheckVoterInterface;
use BaksDev\Users\Groups\Roles\Role\Type\Prefix\RolePrefix;
use BaksDev\Users\Groups\Voter\DataFixtures\Security\VoterFixturesDTO;
use BaksDev\Users\Groups\Voter\DataFixtures\Security\VoterTransFixturesDTO;
use BaksDev\Users\Groups\Voter\Type\Prefix\VoterPrefix;
use BaksDev\Core\Type\Locale\Locale;
use Doctrine\Bundle\FixturesBundle\Fixture;
use Doctrine\Common\DataFixtures\DependentFixtureInterface;
use Doctrine\Persistence\ObjectManager;

final class VoterFixtures extends Fixture implements DependentFixtureInterface
{
    
    public const VOTERS = [
      
      'NEW' => [
        'ru' => 'Добавить',
        'en' => 'New'
      ],
      
      'EDIT' => [
        'ru' => 'Редактировать',
        'en' => 'Edit'
      ],
      
      'DELETE' => [
        'ru' => 'Удалить',
        'en' => 'Delete'
      ],
      
      'RECYCLEBIN' => [
        'ru' => 'Корзина',
        'en' => 'Recyclebin'
      ],
      
      'SETTINGS' => [
        'ru' => 'Настройки',
        'en' => 'Settings'
      ],
      
      'REMOVE' => [
        'ru' => 'Очистить',
        'en' => 'Remove'
      ],
      
      'RESTORE' => [
        'ru' => 'Восстановить',
        'en' => 'Restore'
      ],
      
      'HISTORY' => [
        'ru' => 'История',
        'en' => 'History'
      ],
      
      'ROLLBACK' => [
        'ru' => 'Откатить',
        'en' => 'Rollback'
      ],
    
    ];
    
    private VoterHandler $voterHandler;
    private GetExistCheckVoterInterface $existCheckVoter;
    
    public function __construct(VoterHandler $voterHandler, GetExistCheckVoterInterface $existCheckVoter)
    {
        $this->voterHandler = $voterHandler;
        $this->existCheckVoter = $existCheckVoter;
    }
    
    public function load(ObjectManager $manager)
    {
        # php bin/console doctrine:fixtures:load --append
        
        // Префикс роли
        $ROLE_PREFIX = new RolePrefix(RoleFixtures::ROLE_PREFIX);
        
        foreach(self::VOTERS as $prefix => $voter)
        {
            $VOTER_PREFIX = new VoterPrefix($ROLE_PREFIX.'_'.$prefix);
            
            $Voter = new VoterFixturesDTO($VOTER_PREFIX, $ROLE_PREFIX);
            
            /* Добавляем к роли настройки локали */
            /** @var Locale $local */
            foreach(Locale::cases() as $local)
            {
                $TransVoter = new VoterTransFixturesDTO
                (
                  $local,
                  $voter[$local->getValue()]
                );
                
                $Voter->addTrans($TransVoter);
            }
            
            $this->voterHandler->handle($Voter);
    
    
            /* Добавляем роль к группе администраторов */
            $GROUP_PREFIX = GroupFixtures::GROUP_PREFIX;
            $Group = $manager->getRepository(Group::class)->find($GROUP_PREFIX);
    
            if($Group && !$this->existCheckVoter->get($VOTER_PREFIX, $ROLE_PREFIX, $Group->getEvent()))
            {
                $GroupCheckVoter = new Group\CheckVoter($Group->getEvent(), $ROLE_PREFIX, $VOTER_PREFIX);
                $manager->persist($GroupCheckVoter);
                $manager->flush();
            }

        }
    }
    
    
    public function getDependencies() : array
    {
        return [
          \BaksDev\Users\Groups\Voter\DataFixtures\Security\VoterFixtures::class,
        ];
    }
}