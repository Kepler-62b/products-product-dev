{# ---- ШАБЛОН ------------------------------------------------------------ #}
{% extends Template('/user/base.html.twig') %}

{% block title %}

	{% set arr_property = card.category_section_field|json_decode %}

	{{ card.product_name }}

	{# Значение торгового предложения #}
	{{ card.product_offer_value|call_twig_func(card.product_offer_reference) }}
	{# Постфикс торгового предложения #}
	{{ card.product_offer_postfix }}

	{# Значение множественного варианта ТП #}
	{{ card.product_variation_value|call_twig_func(card.product_variation_reference) }}
	{# Постфикс множественного варианта #}
	{{ card.product_variation_postfix }}


	{# Значение модификации множественного варианта ТП #}
	{{ card.product_modification_value|call_twig_func(card.product_modification_reference) }}
	{# Постфикс модификации #}
	{{ card.product_modification_postfix }}

	{# Свойства, учавствующие в названии #}
	{% for name_property in arr_property | filter(props => props.field_name == true) %}
		{{ name_property.field_value|call_twig_func(name_property.field_type) }}
	{% endfor %}

{% endblock %}

{% block description %}
	{{ card.product_preview|striptags }}
{% endblock %}


{% block meta %}
	
	
	
	{% set product_modification_image = card.product_modification_image|json_decode %}
	{% set product_variation_image = card.product_variation_image|json_decode %}
	{% set product_offer_images = card.product_offer_images|json_decode %}
	{% set product_photo = card.product_photo|json_decode %}
	{% set root_image = null %}
	
	
	{# Определяем главное фото #}
	{% for modification_image in product_modification_image | filter(img =>  img.product_img_root is defined and img.product_img_root == true) %}
		{% set root_image = modification_image %}
	{% endfor %}
	
	{% if root_image is null %}
		{% for variation_image in product_variation_image | filter(img => img.product_img_root is defined and img.product_img_root == true) %}
			{% set root_image = variation_image %}
		{% endfor %}
	{% endif %}
	
	
	
	{% if root_image is null %}
		{% for offer_images in product_offer_images | filter(img => img.product_img_root is defined and img.product_img_root == true) %}
			{% set root_image = offer_images %}
		
		{% endfor %}
	{% endif %}
	
	
	
	{% if root_image is null %}
		{% for product_images in product_photo | filter(img => img.product_img_root is defined and img.product_img_root == true) %}
			{% set root_image = product_images %}
		
		{% endfor %}
	{% endif %}


	{# Обложка #}
	{% set image_path = '/logo.webp' %}

	{% if root_image %}

		{% if root_image.product_img_ext is defined and root_image.product_img_ext is not null %}
			{% set img_host =  root_image.product_img_cdn == true  ? CDN_HOST : '' %}
			{% set img_dir = root_image.product_img %}
			{% set img_file = (img_host is empty ? '/image.' : '/medium.') ~ root_image.product_img_ext %}
			{% set image_path = img_host ~ img_dir ~ img_file %}
		{% endif %}
		
	{% endif %}
	
	
	
	<meta property="og:locale" content="{{ app.request.getLocale() }}_{{ app.request.getLocale()|upper }}">
	<meta property="og:type" content="product">
	<meta property="og:site_name" content="{{ app.request.host }}">
	<meta property="og:title" content="{{ card.product_name }}">
	<meta property="og:description" content="Купить {{ card.product_name }} по выгодной цене за {{ money(card.product_price, card.product_currency) }}">
	<meta property="og:url" content="{{ app.request.uri }}">
	<meta property="og:image" content="{{ absolute_url( image_path ) }}">
	
	<meta name="twitter:card" content="summary_large_image">
	<meta name="twitter:site" content="@https://{{ app.request.host }}">
	<meta name="twitter:title" content="{{ card.product_name }}">
	<meta name="twitter:description" content="Купить {{ card.product_name }} по выгодной цене за {{ money(card.product_price, card.product_currency) }}">
	<meta name="twitter:image:src" content="{{ absolute_url( image_path ) }}">

	
	
{% endblock %}

{# ---- КОНТЕНТ-БЛОК ------------------------------------------------------------ #}
{% block content %}
	{{ include(_self|replace({ "template.html.twig":baks_settings.device~"/content.html.twig" })) }}
{% endblock %}


{% block javascript %}
{# <script defer src="{{ path('user_posts_home_js') }}"></script> #}

<script nonce="{{ csp_nonce() }}" data-src="/assets/order_orders/orders_basket.min.js?v={{ version }}" class='lazy'></script>
<script async data-src="/assets/order_orders/modal_basket.min.js?v={{ version }}" class='lazy'></script>

<script nonce="{{ csp_nonce() }}">
document.querySelectorAll('.img-product').forEach((el) => el.addEventListener('click', () => document.getElementById('img-product').style.backgroundImage = el.style.backgroundImage ));

/* Счетчик  */
document.getElementById('plus').addEventListener('click', () => {
    
    let price_total = document.getElementById('order_product_form_price_total');
     let result = price_total.value * 1;
     let max = price_total.dataset.max * 1;
     
   if (result < max ) document.getElementById('order_product_form_price_total').value = result + 1;
   
});


document.getElementById('minus').addEventListener('click', () => {

    let price_total = document.getElementById('order_product_form_price_total');
    let result = price_total.value * 1;
    if (result > 1) document.getElementById('order_product_form_price_total').value = result - 1
} );

</script>

{% endblock %}